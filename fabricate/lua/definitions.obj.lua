--- @class Executable
--- @field name string The basename of the binary.
--- @field path string Absolute path to the executable.
Executable = {}

--- Invoke the executable with given arguments.
--- WARNING: This will throw a lua error if the invocation fails.
--- @vararg string
--- @return string stdout
function Executable:invoke(...) end

--- @class Source
--- @field name string Source filename.
--- @field path string Absolute path to the source file.
Source = {}

--- @class Rule
--- @field name string Rule name (unique).
Rule = {}

--- Generates a build of the rule.
--- @param output string The filename (or relative path) of the output file generated by this build.
--- @param input Source[] The input sources used.
--- @param variables { [string]: string } The variable values.
--- @return Output
function Rule:build(output, input, variables) end

--- @class Output
--- @field name string Filename of the output file.
--- @field path string Absolute path to the output file.
Output = {}

--- Tells fabricate to install an output when the install subcommand is invoked. The path is relative to the prefix.
--- @param dest string Path to install the output at.
function Output:install(dest) end

--- @class Dependency
--- @field name string Name given to the dependency.
--- @field url string The git URL of the dependency.
--- @field revision string The git revision of the dependency.
--- @field path string Absolute path to the downloaded dependency.
Dependency = {}

--- Practically identical to fab.glob except relative to the directory of the downloaded dependency.
--- @param pattern string Glob pattern to match.
--- @vararg string
--- @return string[] List of found paths.
function Dependency:glob(pattern, ...) end
